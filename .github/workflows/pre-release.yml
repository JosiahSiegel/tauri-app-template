# https://tauri.app/v1/guides/building/cross-platform#example-workflow
name: Pre-Release
on:
  pull_request:
    branches:
      - main

jobs:
  reset_prerelease:
    runs-on: ubuntu-latest
    steps:
      - name: Reset Release
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: true
          tag: v0.0.1
          removeArtifacts: true
          updateOnlyUnreleased: true
          allowUpdates: true

  release:
    needs: reset_prerelease
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    environment: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: yarn install # Change this to npm, yarn or pnpm.

      - name: Build the app
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false

      - name: Upload a Build Artifact - ${{ matrix.platform }}
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ matrix.platform }}-build
          path: |
            ${{ github.workspace }}${{ vars.RELEASE_PATH_01 }}${{ vars.DIR_WILDCARD }}
            ${{ github.workspace }}${{ vars.RELEASE_PATH_02 }}${{ vars.DIR_WILDCARD }}
          if-no-files-found: error

      - name: Tar files - ${{ matrix.platform }}
        run: |
          tar -czf ${{ vars.RELEASE_NAME_01 }}.tar.gz -C ${{ github.workspace }}${{ vars.RELEASE_PATH_01 }} .
          tar -czf ${{ vars.RELEASE_NAME_02 }}.tar.gz -C ${{ github.workspace }}${{ vars.RELEASE_PATH_02 }} .

      - name: Update Pre-Release - ${{ matrix.platform }}
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: true
          artifacts: "${{ github.workspace }}/${{ vars.RELEASE_NAME_01 }}.tar.gz,${{ github.workspace }}/${{ vars.RELEASE_NAME_02 }}.tar.gz"
          tag: v0.0.1
          updateOnlyUnreleased: true
          allowUpdates: true
